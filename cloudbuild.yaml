steps:
- name: gcr.io/kaniko-project/executor:latest
  id: build-frontend
  waitFor: ['-']
  args:
  - "--context=dir:///workspace/cmd/frontend"
  - "--destination=gcr.io/$PROJECT_ID/sample-app-frontend:$COMMIT_SHA"
  - "--cache"
- name: gcr.io/kaniko-project/executor:latest
  id: build-backend
  waitFor: ['-']
  args:
  - "--context=dir:///workspace/cmd/backend"
  - "--destination=gcr.io/$PROJECT_ID/sample-app-backend:$COMMIT_SHA"
  - "--cache"
- name: 'gcr.io/$PROJECT_ID/sample-app-frontend:$COMMIT_SHA'
  id: 'test-frontend'
  waitFor: ['build-frontend']
  entrypoint: 'sh'
  args:
  - -c
  - |
     cd /root/go/src/frontend
     go test
- name: 'gcr.io/$PROJECT_ID/sample-app-backend:$COMMIT_SHA'
  id: 'test-backend'
  waitFor: ['build-backend']
  entrypoint: 'sh'
  args:
  - -c
  - |
     cd /root/go/src/backend
     go test
- name: 'gcr.io/$PROJECT_ID/kustomize'
  id: 'create-production-yaml'
  waitFor: ['test-frontend', 'test-backend']
  entrypoint: 'sh'
  args:
  - -c
  - |
     /kustomize build k8s/production > production.yaml
- name: 'gcr.io/cloud-builders/gsutil'
  id: 'upload-production-yaml'
  waitFor: ['create-production-yaml']
  args:
  - cp
  - production.yaml
  - gs://vic-cd-demo-k8s-yaml/production.yaml
- name: 'gcr.io/$PROJECT_ID/kustomize'
  id: 'create-staging-yaml'
  waitFor: ['test-frontend', 'test-backend']
  entrypoint: 'sh'
  args:
  - -c
  - |
     /kustomize build k8s/staging > staging.yaml
- name: 'gcr.io/cloud-builders/gsutil'
  id: 'upload-staging-yaml'
  waitFor: ['create-staging-yaml']
  args:
  - cp
  - staging.yaml
  - gs://vic-cd-demo-k8s-yaml/staging.yaml
options:
 machineType: 'N1_HIGHCPU_32'